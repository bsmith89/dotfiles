# Without this vim has funky colors
set -g default-terminal "screen-256color"

# Make it use C-z as the prefix
set-option -g prefix C-z
unbind-key C-b
bind-key z send-prefix
unbind-key C-z

set -gs escape-time 0

# While C-z z will send a stop (C-z outside of tmux), C-z C-z now goes
# to the previous window.
bind-key C-z last-window

# Set copy mode and status line key bindings to be vi-like (rather than emacs)
set-window-option -g mode-keys vi

# Set copy mode keys to be more vi-like
bind-key -t vi-copy 'v' begin-selection
bind-key -t vi-copy 'y' copy-selection

# Set copy mode to allow mouse selection
set-window-option -g mode-mouse on

# Easily navigate to different panes
bind-key Tab select-pane -t :.+
bind-key S-Tab last-pane

# Use the DISPLAY environmental variable from the outer shell
set-option -ga update-environment ' DISPLAY'

# Window numbering starts at 1, not 0.
set -g base-index 1

# Make joining and breaking panes simpler
bind-key @ command-prompt -p "join pane from:"  "join-pane -s '%%'"

# See http://unix.stackexchange.com/a/126984
# Saner splitting.
bind v split-window -c "#{pane_current_path}" -h
bind s split-window -c "#{pane_current_path}" -v
bind '"' split-window -c "#{pane_current_path}" -v
# Autorename sanely.
setw -g automatic-rename on
# Better name management
bind c new-window -c "#{pane_current_path}"

# Should fix the problem of window sizes...
setw -g aggressive-resize on

# Supposed to (w/ the corresponding changes to my .vimrc) allow
# me to use vim keys for pane movements between both apps
# See https://github.com/christoomey/vim-tmux-navigator#tmux
# TODO: This doesn't seem to work when calling vim from inside a subshell
is_vim='echo "#{pane_current_command}" | grep -iqE "(^|\/)g?(view|n?vim?)(diff)?$"'
bind -n C-h if-shell "$is_vim" "send-keys C-h" "select-pane -L"
bind -n C-j if-shell "$is_vim" "send-keys C-j" "select-pane -D"
bind -n C-k if-shell "$is_vim" "send-keys C-k" "select-pane -U"
bind -n C-l if-shell "$is_vim" "send-keys C-l" "select-pane -R"
bind -n C-\ if-shell "$is_vim" "send-keys C-\\" "select-pane -l"

# Allow vim to recognize focus events.
# This means that outside of TMUX focus event changes won't be noticed.
# See https://github.com/tmux-plugins/vim-tmux-focus-events
set -g focus-events on


# Now fix the conspicous lack of a "clear" hotkey
bind-key l send-keys C-l

if-shell "[ -f \"$HOME/.tmux.local.conf\" ]" "source-file $HOME/.tmux.local.conf" ""

# Resize windows?
bind -r M-h resize-pane -L
bind -r M-j resize-pane -D
bind -r M-k resize-pane -U
bind -r M-l resize-pane -R
